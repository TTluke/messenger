import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@/public/css/global.css"
import AuthContextProvider from "./lib/auth_provider";
import WebSocketProvider from "./lib/ws_provider";
import { RoomProvider } from "./lib/room_provider";
import type { Viewport } from 'next'

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export const viewport: Viewport = {
  width: 'device-width',
  initialScale: 1,
  maximumScale: 1,
  userScalable: true,
  interactiveWidget: 'resizes-content',
}
export default function RootLayout({ children }: Readonly<{ children: React.ReactNode; }>) {
  return (
    <AuthContextProvider>
      <WebSocketProvider>
        <RoomProvider>
          <html>
            <head>
              {/* <script */}
              {/*   crossOrigin="anonymous" */}
              {/*   src="//unpkg.com/react-scan/dist/auto.global.js" */}
              {/* /> */}
            </head>
            <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
              {children}
            </body>
          </html>
        </RoomProvider>
      </WebSocketProvider>
    </AuthContextProvider>
  );
}
